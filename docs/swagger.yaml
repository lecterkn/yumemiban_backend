basePath: /api
definitions:
  request.NovelGenerateRequest:
    properties:
      content:
        type: string
    required:
    - content
    type: object
  request.PostCreateRequest:
    properties:
      content:
        type: string
      nickname:
        type: string
      novel:
        type: string
      title:
        type: string
    required:
    - content
    - nickname
    - novel
    - title
    type: object
  response.DiscoverLatestResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/response.DiscoverResponse'
        type: array
    required:
    - list
    type: object
  response.DiscoverResponse:
    properties:
      content:
        type: string
      createdAt:
        type: string
      id:
        type: string
      likes:
        type: integer
      nickname:
        type: string
      novel:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      userId:
        type: string
    required:
    - content
    - createdAt
    - id
    - likes
    - nickname
    - novel
    - title
    - updatedAt
    - userId
    type: object
  response.NovelGenerateResponse:
    properties:
      novel:
        type: string
    required:
    - novel
    type: object
  response.PostCreateResponse:
    properties:
      content:
        type: string
      createdAt:
        type: string
      id:
        type: string
      nickname:
        type: string
      novel:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      userId:
        type: string
    required:
    - content
    - createdAt
    - id
    - nickname
    - novel
    - title
    - updatedAt
    - userId
    type: object
  response.UserSignupResponse:
    properties:
      accessToken:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      refreshToken:
        type: string
      updatedAt:
        type: string
    required:
    - accessToken
    - createdAt
    - id
    - name
    - password
    - refreshToken
    - updatedAt
    type: object
host: http://localhost:8089
info:
  contact: {}
  description: YumemibanのAPIサーバー
  title: yumemi backend API
  version: "1.0"
paths:
  /discover/latest:
    get:
      description: 最新の投稿を一覧取得する
      parameters:
      - description: 最後の投稿ID
        in: query
        name: lastId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DiscoverLatestResponse'
      summary: GetLatest
      tags:
      - discover
  /novels/generate:
    post:
      description: 小説を生成する
      parameters:
      - description: 小説生成リクエスト
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.NovelGenerateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.NovelGenerateResponse'
      security:
      - BearerAuth: []
      summary: GenerateNovel
      tags:
      - novel
  /posts:
    post:
      description: 投稿を新規作成する
      parameters:
      - description: 投稿作成リクエスト
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.PostCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PostCreateResponse'
      security:
      - BearerAuth: []
      summary: CreatePost
      tags:
      - post
  /posts/{postId}/likes:
    post:
      description: 投稿にいいねをつける
      parameters:
      - description: 投稿ID
        in: path
        name: postId
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: LikePost
      tags:
      - post
  /signup:
    post:
      description: ユーザーを新規作成する
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserSignupResponse'
      summary: CreateUser
      tags:
      - user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
